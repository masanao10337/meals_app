name: set release branch
run-name: set release branch for ${{ github.event.inputs.version }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'input Release version (e.g. 1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create_release_branch:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_VERSION: ${{ github.event.inputs.version }}

    steps:
      - name: Validate input version format
        run: |
          if [[ !  "${{ env.RELEASE_VERSION }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Please use the format: major.minor.patch (e.g., 1.0.0)"
            exit 1
          fi

      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: development

      - name: Config git
        run: |
          git remote set-url origin https://github-actions:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Create release branch
        run: |
          git checkout -b release/${{ env.RELEASE_VERSION }}

      - name: Update version in pubspec.yaml
        run: |
          sudo snap install yq
          CURRENT_VERSION=$(yq '.version' pubspec.yaml)

          if [[ "${{ env.RELEASE_VERSION }}" > "$CURRENT_VERSION" ]]; then
            sed -i -e "s/^version:.*/version: ${{ env.RELEASE_VERSION }}/" pubspec.yaml
          else
            echo "The input version (${{ env.RELEASE_VERSION }}) is not greater than the current version ($CURRENT_VERSION)."
            exit 1
          fi

      - name: Commit Change
        run: |
          git add pubspec.yaml
          git commit -m "Increment version to ${{ env.RELEASE_VERSION }}"

      - name: Push release branch
        run: |
          git push origin release/${{ env.RELEASE_VERSION }}

      - name: Create PR to master and devlopment branch
        run: |
          gh pr create --base development --head release/${{ env.RELEASE_VERSION }} --title "Release ${{ env.RELEASE_VERSION }}" --body "Release ${{ env.RELEASE_VERSION }}" &&
          gh pr create --base master --head release/${{ env.RELEASE_VERSION }} --title "Release ${{ env.RELEASE_VERSION }}" --body "Release ${{ env.RELEASE_VERSION }}"

